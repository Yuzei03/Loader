local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "ZeroHub",
    LoadingTitle = "ZeroHub",
    LoadingSubtitle = "by zerobaki",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "ZeroHub",
        FileName = "Config"
    },
    KeySystem = false
})

local MainTab = Window:CreateTab("Main")
local BossFarmTab = Window:CreateTab("Boss Farm")
local InvestigateTab = Window:CreateTab("Investigate")
local MiscTab = Window:CreateTab("Misc")

local killLoopActive = false
local autoCollectActive = false
local autoLootActive = false
local teleportToBossActive = false
local autoCurseObjectActive = false
local killAuraActive = false
local proximityFired = false

MainTab:CreateToggle({
    Name = "Insta Kill",
    Info = "Kills all non-player humanoids",
    CurrentValue = false,
    Flag = "KillToggle",
    Callback = function(Value)
        killLoopActive = Value
        if Value then
            task.spawn(function()
                while killLoopActive do
                    for _, model in pairs(workspace:GetDescendants()) do
                        if model:IsA("Model") then
                            local humanoid = model:FindFirstChild("Humanoid")
                            local isPlayer = game:GetService("Players"):GetPlayerFromCharacter(model)
                            if humanoid and not isPlayer then
                                humanoid.Health = 0
                            end
                        end
                    end
                    task.wait(0.1)
                end
            end)
        end
    end,
})

MainTab:CreateToggle({
    Name = "KillAura",
    Info = "Automatically attacks nearby enemies",
    CurrentValue = false,
    Flag = "KillAuraToggle",
    Callback = function(Value)
        killAuraActive = Value
        if Value then
            task.spawn(function()
                local function getMobsWithHumanoids()
                    local mobsWithHumanoids = {}
                    local mobsFolder = workspace:WaitForChild("Objects"):WaitForChild("Mobs")

                    for _, mob in ipairs(mobsFolder:GetChildren()) do
                        if mob:IsA("Model") then
                            local humanoid = mob:FindFirstChild("Humanoid")
                            if humanoid then
                                table.insert(mobsWithHumanoids, humanoid)
                            end
                        end
                    end

                    return mobsWithHumanoids
                end

                while killAuraActive do
                    local mobsWithHumanoids = getMobsWithHumanoids()

                    if #mobsWithHumanoids > 0 then
                        local args = {
                            [1] = 2,  
                            [2] = mobsWithHumanoids
                        }

                        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Server"):WaitForChild("Combat"):WaitForChild("M1"):FireServer(unpack(args))

                        print("works")
                    else
                        print("no work")
                    end

                    task.wait(0.01)
                end
            end)
        end
    end,
})

local proximityFired = false

BossFarmTab:CreateToggle({
    Name = "Auto Loot",
    Info = "Automatically loots nearby chests and collects nearby items",
    CurrentValue = false,
    Flag = "AutoLootToggle",
    Callback = function(Value)
        autoLootActive = Value
        if Value then
            task.spawn(function()
                local DropsFolder = game.Workspace.Objects.Drops

                local function firePrompt(chest)
                    if chest:IsA("Model") then
                        local prompt = chest:FindFirstChildOfClass("ProximityPrompt")
                        if prompt and prompt.ActionText == "Collect" then
                            prompt:InputHoldBegin()
                            task.wait(0.5)
                            prompt:InputHoldEnd()

                            local VirtualInputManager = game:GetService("VirtualInputManager")

                            local function simulateKeyPress(key)
                                VirtualInputManager:SendKeyEvent(true, key, false, game)
                                task.wait(0.1)
                                VirtualInputManager:SendKeyEvent(false, key, false, game)
                            end

                            task.wait(2)
                            simulateKeyPress(Enum.KeyCode.BackSlash)
                            task.wait(1)
                            for i = 1, 5 do
                                simulateKeyPress(Enum.KeyCode.Return)
                                task.wait(0.2)
                                simulateKeyPress(Enum.KeyCode.BackSlash)
                            end
                            task.wait(2.6)

                            proximityFired = true -- Important to keep this here for other functionalities
                            return true
                        end
                    end
                    return false
                end

                while autoLootActive do
                    local anyPromptFired = false -- Track if ANY prompt was fired this iteration
                    for _, chest in ipairs(DropsFolder:GetChildren()) do
                        if firePrompt(chest) then
                            anyPromptFired = true
                        end
                    end
                    proximityFired = anyPromptFired -- Update the global flag after checking all chests
                    task.wait(0.5)
                end
            end)
        else
            proximityFired = false
        end
    end,
})


BossFarmTab:CreateToggle({
    Name = "Teleport to Boss",
    Info = "Teleports to the boss area",
    CurrentValue = false,
    Flag = "TeleportToBossToggle",
    Callback = function(Value)
        teleportToBossActive = Value
        if Value then
            task.wait(1)
            local TweenService = game:GetService("TweenService")
            local VirtualInputManager = game:GetService("VirtualInputManager")
            local player = game.Players.LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            local rootPart = character:WaitForChild("HumanoidRootPart")
            local targetPosition = Vector3.new(3525.0185546875, 5990.5298515625, 4049.24755859375)

            local tweenInfo = TweenInfo.new(
                0,
                Enum.EasingStyle.Linear,
                Enum.EasingDirection.Out
            )

            local goal = {
                CFrame = CFrame.new(targetPosition)
            }

            local tween = TweenService:Create(rootPart, tweenInfo, goal)

            local function simulateKeyPress(key)
                VirtualInputManager:SendKeyEvent(true, key, false, game)
                task.wait(0.1)
                VirtualInputManager:SendKeyEvent(false, key, false, game)
            end

            tween:Play()
            tween.Completed:Connect(function()
                task.wait(3)
                simulateKeyPress(Enum.KeyCode.J)
            end)
        end
    end,
})
BossFarmTab:CreateToggle({
    Name = "Auto Replay",
    Info = "Automatically replays last actions (Backslash, then 5x Enter)",
    CurrentValue = false,
    Flag = "AutoReplayToggle",
    Callback = function(Value)
        autoReplayActive = Value
        if Value then
            task.spawn(function()
                local VirtualInputManager = game:GetService("VirtualInputManager")

                local function simulateKeyPress(key)
                    VirtualInputManager:SendKeyEvent(true, key, false, game)
                    task.wait(0.1)
                    VirtualInputManager:SendKeyEvent(false, key, false, game)
                end

                while autoReplayActive do
                task.wait(120)
                    simulateKeyPress(Enum.KeyCode.BackSlash)
                    task.wait(1)
                    for i = 1, 5 do
                        simulateKeyPress(Enum.KeyCode.Return)
                        task.wait(0.2)
                        simulateKeyPress(Enum.KeyCode.BackSlash)
                    end
                    task.wait(2.6)
                    task.wait(0.5)
                end
            end)
        end
    end,
})

InvestigateTab:CreateToggle({
    Name = "Auto CurseObject",
    Info = "Automatically Collects curseobjects",
    CurrentValue = false,
    Flag = "AutoCurseObjectToggle",
    Callback = function(Value)
        autoCurseObjectActive = Value
        if Value then
            task.spawn(function()
                local TweenService = game:GetService("TweenService")
                local player = game.Players.LocalPlayer
                local character = player.Character or player.CharacterAdded:Wait()
                local rootPart = character:WaitForChild("HumanoidRootPart")
                local DropsFolder = game.Workspace.Objects.MissionItems

                local function firePrompt(CursedObject)
                    if CursedObject:IsA("MeshPart") then
                        local prompt = CursedObject:FindFirstChildOfClass("ProximityPrompt")
                        if prompt and prompt.ActionText == "Collect" then
                            local tweenInfo = TweenInfo.new(
                                1,
                                Enum.EasingStyle.Linear,
                                Enum.EasingDirection.Out
                            )
                            local goal = {
                                CFrame = CFrame.new(CursedObject.Position)
                            }
                            local tween = TweenService:Create(rootPart, tweenInfo, goal)
                            tween:Play()
                            tween.Completed:Connect(function()
                                prompt:InputHoldBegin()
                                task.wait(0.5)
                                prompt:InputHoldEnd()
                            end)
                        end
                    end
                end

                local function loopAndFirePrompts()
                    for _, CursedObject in ipairs(DropsFolder:GetChildren()) do
                        coroutine.wrap(firePrompt)(CursedObject)
                    end
                end

                while autoCurseObjectActive do
                    loopAndFirePrompts()
                    task.wait(1)
                end
            end)
        end
    end,
})

InvestigateTab:CreateToggle({
    Name = "Auto Mobs",
    Info = "Automatically handles mobs",
    CurrentValue = false,
    Flag = "AutoMobsToggle",
    Callback = function(Value)
        autoMobsActive = Value
        if Value then
            task.spawn(function()
                local TweenService = game:GetService("TweenService")
                local Players = game:GetService("Players")
                local LocalPlayer = Players.LocalPlayer
                local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
                local RootPart = Character:WaitForChild("HumanoidRootPart")
                local MobsFolder = workspace:WaitForChild("Objects"):WaitForChild("Mobs")

                local function tweenToMob(mob)
                    if not mob:IsA("Model") or not mob:FindFirstChild("HumanoidRootPart") then
                        return
                    end

                    local mobRootPart = mob:FindFirstChild("HumanoidRootPart")
                    local tweenInfo = TweenInfo.new(
                        1,
                        Enum.EasingStyle.Linear,
                        Enum.EasingDirection.Out,
                        0,
                        false,
                        0
                    )

                    local goal = {
                        CFrame = CFrame.new(mobRootPart.Position)
                    }

                    local tween = TweenService:Create(RootPart, tweenInfo, goal)
                    tween:Play()
                end

                while autoMobsActive do
                    local mobs = MobsFolder:GetChildren()
                    if #mobs > 0 then
                        local randomMobIndex = math.random(1, #mobs)
                        local randomMob = mobs[randomMobIndex]
                        tweenToMob(randomMob)
                    end
                    task.wait(5)
                end
            end)
        end
    end,
})
